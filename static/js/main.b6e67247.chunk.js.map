{"version":3,"sources":["components/Card.tsx","App.tsx","index.tsx"],"names":["Card","name","birthDate","authorIndex","topWork","totalBooks","authorId","String","className","Accordion","Item","eventKey","Header","Body","App","props","useState","setName","response","setResponse","searchAuthor","event","a","preventDefault","axios","get","params","q","data","docs","onSubmit","value","onChange","e","target","type","placeholder","map","author","index","birth_date","top_work","work_count","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAuCeA,EA5BS,SAAC,GAMX,IALVC,EAKS,EALTA,KACAC,EAIS,EAJTA,UACAC,EAGS,EAHTA,YACAC,EAES,EAFTA,QACAC,EACS,EADTA,WAEMC,EAAmBC,OAAOJ,GAEhC,OACI,qBAAKK,UAAU,sBAAf,SACI,cAACC,EAAA,EAAD,UACI,eAACA,EAAA,EAAUC,KAAX,CAAgBC,SAAUL,EAA1B,UACI,cAACG,EAAA,EAAUG,OAAX,UAAmBX,IACnB,eAACQ,EAAA,EAAUI,KAAX,WACI,+CACA,+BACI,iDAAoBX,KACpB,4CAAeE,KACf,+CAAkBC,mBCwC/BS,G,MA9DC,SAACC,GAAkB,IAAD,EACNC,mBAAS,IADH,mBACvBf,EADuB,KACjBgB,EADiB,OAEED,mBAAS,IAFX,mBAEvBE,EAFuB,KAEbC,EAFa,KAIxBC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACjBD,EAAME,iBADW,SAEMC,IAAMC,IACzB,8CACA,CACIC,OAAQ,CACJC,EAAG1B,KANE,OAEXiB,EAFW,OAUjBC,EAAYD,EAASU,KAAKC,MAVT,2CAAH,sDAalB,OACI,sBAAKrB,UAAU,YAAf,UACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,MAAf,SACI,gDAGR,qBAAKA,UAAU,gBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAMsB,SAAUV,EAAhB,SACI,qBAAKZ,UAAU,OAAf,SACI,uBACIuB,MAAO9B,EACP+B,SAAU,SAACC,GACPhB,EAAQgB,EAAEC,OAAOH,QAErBI,KAAK,OACL3B,UAAU,eACV4B,YAAY,0EAMhC,qBAAK5B,UAAU,iBAAf,SACI,qBAAKA,UAAU,MAAf,SACKU,EAASmB,KAAI,SAACC,EAAaC,GACxB,OACI,qBAAK/B,UAAU,aAAf,SACI,cAAC,EAAD,CACIP,KAAMqC,EAAOrC,KACbE,YAAaoC,EACbrC,UAAWoC,EAAOE,WAClBpC,QAASkC,EAAOG,SAChBpC,WAAYiC,EAAOI,cANMH,eCjD7DI,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.b6e67247.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\n\ninterface Props {\n    name: any;\n    authorIndex: number;\n    birthDate: any | undefined;\n    topWork: any | undefined;\n    totalBooks: any | undefined;\n}\n\nconst Card: FC<Props> = ({\n    name,\n    birthDate,\n    authorIndex,\n    topWork,\n    totalBooks,\n}: Props) => {\n    const authorId: string = String(authorIndex);\n\n    return (\n        <div className=\"accordion-container\">\n            <Accordion>\n                <Accordion.Item eventKey={authorId}>\n                    <Accordion.Header>{name}</Accordion.Header>\n                    <Accordion.Body>\n                        <p>Author Details</p>\n                        <ol>\n                            <li>Data of Birth: {birthDate}</li>\n                            <li>Top Work: {topWork}</li>\n                            <li>Total Books: {totalBooks}</li>\n                        </ol>\n                    </Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n        </div>\n    );\n};\n\nexport default Card;\n","/* eslint-disable array-callback-return */\nimport React, { FC, useState } from \"react\";\nimport axios from \"axios\";\nimport Card from \"./components/Card\";\nimport \"./index.css\";\n\ninterface Props {}\n\nconst App: FC = (props: Props) => {\n    const [name, setName] = useState(\"\");\n    const [response, setResponse] = useState([]);\n\n    const searchAuthor = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        const response = await axios.get(\n            \"https://openlibrary.org/search/authors.json\",\n            {\n                params: {\n                    q: name,\n                },\n            }\n        );\n        setResponse(response.data.docs);\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <h1>Book World</h1>\n                </div>\n            </div>\n            <div className=\"row input-row\">\n                <div className=\"col\">\n                    <form onSubmit={searchAuthor}>\n                        <div className=\"mb-3\">\n                            <input\n                                value={name}\n                                onChange={(e) => {\n                                    setName(e.target.value);\n                                }}\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Enter name to find matching authors and press enter to search\"\n                            />\n                        </div>\n                    </form>\n                </div>\n            </div>\n            <div className=\"row output-row\">\n                <div className=\"col\">\n                    {response.map((author: any, index: number) => {\n                        return (\n                            <div className=\"output-col\" key={index}>\n                                <Card\n                                    name={author.name}\n                                    authorIndex={index}\n                                    birthDate={author.birth_date}\n                                    topWork={author.top_work}\n                                    totalBooks={author.work_count}\n                                />\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}